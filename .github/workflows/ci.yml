name: Backend CI
on:
  push:
    branches:
      - main
jobs:
  test:
    name: Run Tests
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [22]

    environment: MONGO_URI

    steps:

    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version}}

    - name: Print Env Secret
      env: # Define environment variables for this step
        MONGO_URI: ${{ secrets.MONGO_URI }} # MongoDB connection string
        JWT_SECRET: ${{ secrets.JWT_SECRET }} # JWT authentication secret
        PORT: ${{ secrets.PORT }} # Application port
      run: | # Run multiple shell commands
        echo "Secret 1 is: $MONGO_URI" # Print MongoDB URI
        echo "Secret 2 is: $JWT_SECRET" # Print JWT Secre
        echo "Secret 3 is: $PORT" # Print Application Port

    - run: pm2 stop all
    - name: Install Backend Dependencies
      working-directory: ./backend # Navigate to backend folder
      run: | # Run multiple commands
        npm install --global yarn # Install Yarn globally
        yarn --version # Verify Yarn installation
        yarn install # Install backend dependencies using Yarn
    - name: Install Frontend Dependencies
      working-directory: ./frontend # Navigate to frontend folder
      run: | # Run multiple commands
        df -h # Show disk space usage
        sudo rm -rf ./build # Remove existing build directory
        yarn install # Install frontend dependencies
        yarn run build # Build the frontend application
    
    - name: Run Backend Tests
      env: # Define environment variables for this step
        MONGO_URI: ${{ secrets.MONGO_URI }} # MongoDB connection string
        JWT_SECRET: ${{ secrets.JWT_SECRET }} # JWT authentication secret
        PORT: ${{ secrets.PORT }} # Application port
      working-directory: ./backend # Navigate to backend folder
      run: npm test # Run backend tests

    - run: npm ci
    - run: |
        cd ./backend # Navigate to backend folder
        touch .env # Create an empty .env file
        echo "${{ secrets.PROD }}" > .env

    - run: pm2 start all
    - run: pm2 restart all
