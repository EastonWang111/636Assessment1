name: Backend CI

on:
  push:
    branches:
      - main  # Trigger CI on pushes to the main branch

jobs:
  test:
    name: Run Tests
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [22] # Test on Node.js v22

    environment: MONGO_URI

    steps:
    # 1. 检出代码
    - name: Checkout Code
      uses: actions/checkout@v3

    # 2. 设置 Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    # 3. 停止已有 PM2 进程（忽略失败）
    - name: Stop PM2
      run: pm2 stop all || true

    # 4. 创建 .env 文件（先清空，覆盖写入）
    - name: Create .env file
      working-directory: ./backend
      run: |
        rm -f .env
        echo "MONGO_URI=${{ secrets.MONGO_URI }}" > .env
        echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
        echo "PORT=${{ secrets.PORT }}" >> .env
        echo "✅ .env created successfully"
        cat .env

    # 5. 安装 Backend 依赖
    - name: Install Backend Dependencies
      working-directory: ./backend
      run: |
        npm install --global yarn
        yarn install

    # 6. 安装 Frontend 依赖并构建
    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: |
        sudo rm -rf ./build
        yarn install
        yarn run build

    # 7. 运行 Backend 测试
    - name: Run Backend Tests
      env:
        MONGO_URI: ${{ secrets.MONGO_URI }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        PORT: ${{ secrets.PORT }}
      working-directory: ./backend
      run: npm test

    # 8. 启动 Backend（指定 cwd 确保加载 .env）
    - name: Start backend with PM2
      run: |
        pm2 delete backend || true
        pm2 start server.js --name backend --cwd ./backend
        pm2 save

    # 9. 重启 PM2（可选）
    - run: pm2 restart all || true
